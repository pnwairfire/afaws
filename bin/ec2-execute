#!/usr/bin/env python

"""elb-execute: Script to execute commands on EC2 instances

Use the help ('-h') option to see options and an example call.
"""

__author__      = "Joel Dubowy"

import asyncio
import logging
import sys

try:
    from afaws.ec2.execute import Ec2SshExecuter
    from afaws.scripting import exit_with_msg, AwsScriptArgs

except ImportError as e:
    import os
    if not os.path.exists('/.dockerenv'):
        print("""Run in docker:

            docker run --rm -ti -v $PWD/:/afaws/ -v $HOME/.aws/:/root/.aws/ \\
                -v $HOME/.ssh:/root/.ssh afaws {} -h
        """.format(sys.argv[0]))
        sys.exit(1)
    else:
        raise


class Ec2ExecuteArgs(AwsScriptArgs):

    REQUIRED_ARGS = [
        {
            'short': '-c',
            'long': '--command',
            'dest': 'commands',
            'help': "command to execute; e.g. 'echo hello'",
            'action': 'append',
            'default': []
        },
        {
            'short': '-i',
            'long': '--instance-identifier',
            'dest': 'instance_identifiers',
            'help': "instance name or id; e.g. 'web-4', 'i-abd123', etc.",
            'action': 'append',
            'default': []
        },
        {
            'short': '-k',
            'long': '--ssh-key',
            'help': "key for ssh'ing to ec2 instances"
        }
    ]

    EXAMPLE_STRING = """Example calls:
     > {script} --log-level INFO -k ~/.ssh/id_rsa -i web-5 -i web-6 -c 'echo foo' -c 'echo bar'

** When using Docker, remember to mount ssh key dir **
    """.format(script=sys.argv[0])

def print_output(output, stream_name):
    if output.get(stream_name):
        print("{} output".format(stream_name))
        for ip in output[stream_name]:
            print("  Host: {}".format(ip))
            for cmd, lines in output[stream_name][ip]:
                print("    Command: {}".format(cmd))
                for l in lines:
                    print("      {}".format(l.strip()))


async def main():
    args = Ec2ExecuteArgs().args

    try:
        cmd_executer = Ec2SshExecuter(args.ssh_key, args.instance_identifiers)
        output = await cmd_executer.execute(args.commands)
        print_output(output, 'STDOUT')
        print_output(output, 'STDERR')


    except Exception as e:
        exit_with_msg(e)

if __name__ == "__main__":
    asyncio.run(main())
